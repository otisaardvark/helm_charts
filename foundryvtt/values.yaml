#--------------------------------------------------------------------------------------------
# Foundry VTT chart
#--------------------------------------------------------------------------------------------

# Override the default chart name
nameOverride: ""
fullnameOverride: ""

#--------------------------------------------------------------------------------------------
# Image
#--------------------------------------------------------------------------------------------
# Best practice is to use a private repository to host your image which is built using 
# the image held at felddy/foundryvtt-docker.
#--------------------------------------------------------------------------------------------
image:
  pullPolicy: Always
  repository: felddy/foundryvtt
  tag: release-0.8.9

# Credentials for Docker private repository.
imagePullSecrets: []

#--------------------------------------------------------------------------------------------
# Service account
#--------------------------------------------------------------------------------------------
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # The name of the service account to use. If blank and create is true, 
  # a name will be generated using the fullname template
  name:
  # Annotations to add to the service account
  annotations:

#--------------------------------------------------------------------------------------------
# Resources
#--------------------------------------------------------------------------------------------
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
#--------------------------------------------------------------------------------------------
resources:
  limits:
    cpu: 1024m
    memory: 1024Mi
  requests:
    cpu: 512m
    memory: 512Mi

#--------------------------------------------------------------------------------------------
# Service
#--------------------------------------------------------------------------------------------
service:
  serviceType: NodePort
  port: 30000
  nodePort: 30000
  protocol: TCP
  labels: {}
  annotations:
    external-dns.alpha.kubernetes.io/hostname: foundry.domain.com

#--------------------------------------------------------------------------------------------
# Persistance
#--------------------------------------------------------------------------------------------
# Configure persistance either through a simple binding or a persistence volume claim.
#--------------------------------------------------------------------------------------------
persistence:
  ## Foundry VTT data Persistent Volume Storage Class
  ## Bind mount is mutually exclusive.
  ## when storageClass for PV is enable this is automatically disabled
  ## To use bind.enabled == true and dataDir.enabled == false
  bind:
    enabled: true
    hostpath: /path_to_host_data_folder

  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: 
  dataDir:
    enabled: false
    Size: 5Gi

  shared:
    # Enable tha shared mount for a NFS file system or a shared bind point with for
    # sharing assets between multiple game instances when not using s3.
    enabled: false
    mounts:
    ## containerPath: is relative to the /data/Data
    ## type: bind or pvc
    ## hostpath: only used for bind mount
    ## readOnly: enable read only directories
    ## clainName: to be used mainly with NFS CSI PV/PVC
    # - containerPath: "/shared"
    #   type: bind
    #   hostPath: /files/assets
    #   readOnly: true
    # - containerPath: "/files/assets"
    #   type: pvc
    #   claimName: "pvc-files"


#--------------------------------------------------------------------------------------------
# Docker container customisation
#--------------------------------------------------------------------------------------------
containerConfig:
  ## Set a path to cache downloads of the Foundry distribution archive and speed up subsequent
  ## container startups. The path should be in /data or another persistent mount point in the
  ## container. e.g.; /data/cache
  # cache: /data/cache

  ## `gid` the deamon will be run under. Default is `foundry`
  # gid: 421

  ## Set a path to a directory of shell scripts to be sourced after Foundry is installed but 
  ## before it is started. The path should be in /data or another persistent mount point in 
  ## the container. e.g.; /data/container_patches Patch files are sourced in lexicographic 
  ## order. CONTAINER_PATCHES are processed after CONTAINER_PATCH_URLS.
  # patches: /data/patches

  ## Set to a space-delimited list of URLs to be sourced after Foundry is installed but before
  ## it is started. Patch URLs are sourced in the order specified. CONTAINER_PATCH_URLS are
  ## processed before CONTAINER_PATCHES. ⚠️ Only use patch URLs from trusted sources!
  # patchUrls:
  #   - https://www.path.example/z.sh
  #   - https://www.path.example/b.sh

  ## Normally new `options.json` and `admin.txt` files are generated by the container at each
  ## startup.  Setting this to `true` prevents the container from modifying these files when 
  ## they exist.  If they do not exist, they will be created as normal. Default is false.
  preserveConfig: false

  ## Normally the ownership of the `/data` directory and its contents are changed to match 
  ## that of the server at startup.  Setting this to a regular expression will exclude any 
  ## matching paths and preserve their ownership.   _Note: This is a match on the whole path, 
  ## not a search._  This is useful if you want mount a volume as read-only inside `/data`
  # preserveOwner:

  ## Container [TZ database name](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List). Default is UTC
  timezone: UTC

  ## `uid` the daemon will be run under. Default is `foundry`
  # uid: 421

  ## Set to `true` to enable verbose logging for the container utility scripts. Default is false
  verbose: false

#--------------------------------------------------------------------------------------------
# Foundry VTT Custom configurations
#--------------------------------------------------------------------------------------------
# Configurations details are provided here: https://foundryvtt.com/article/hosting/
# Cupported environment variables here: https://github.com/felddy/foundryvtt-docker/README.md
#--------------------------------------------------------------------------------------------
foundryConfig:
  
  ## Account username or email address for foundryvtt.com. Required for downloading an 
  ## application distribution.
  username: [YOUR_FOUNDRY_USERNAME]

  ## Account password for foundryvtt.com. Required for downloading an application distribution.
  password: [YOUR_FOUNDRY_PASSWORD]

  ##  S3 pre-signed URL generate from the user's profile.  Required for downloading an 
  ## application distribution.
  # release_url:

  ## The license key to install. e.g.; AAAA-BBBB-CCCC-DDDD-EEEE-FFFF If left unset, a license
  ## key will be fetched when using account authentication. If multiple license keys are
  ## associated with an account, one will be chosen at random. Specific licenses can be
  ## selected by passing in an integer index. The first license key being 1.
  license_key: [YOUR_FOUNDRY_LICENCE]

  ## Admin password. Default: admin
  adminKey: admin

  ## A custom hostname to use in place of the host machine's public IP address when
  ## displaying the address of the game session. This allows for reverse proxies or DNS
  ## servers to modify the public address.
  hostname: "foundry.domain.com"

  ## The default application language and module which provides the core translation 
  ## files. Default is "en.core"
  language: "en.core"

  ## Set to `true` to reduce network traffic by serving minified static JavaScript and CSS
  ## files.  Enabling this setting is recommended for most users, but module developers may wish
  ## to disable it. Default is `false`.
  minifyStaticFiles: true

  ## Inform the Foundry Server that the software is running behind a reverse proxy on some
  ## other port. This allows the invitation links created to the game to include the correct
  ## external port.
  # proxyPort: 80

  ## Indicates whether the software is running behind a reverse proxy that uses SSL. This 
  ## allows invitation links and A/V functionality to work as if the Foundry Server had SSL
  ## configured directly.
  # proxySSL: true

  ## A string path which is appended to the base hostname to serve Foundry VTT content from
  ## a specific namespace. For example setting this to demo will result in data being served
  ## from http://x.x.x.x:30000/demo/.
  # routePrefix: 

  ## Credentials for generate the [awsConfig.json](https://foundryvtt.com/article/aws-s3/) 
  ## or `true` for AWS environment variable [credentials evaluation](https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/setting-credentials-node.html) usage.
  s3:
    awsConfig: "false"
    # To use the inline credentials and generate "awsConfig.json" use: awsConfig: file
    # aws_access_key_id: *************
    # aws_region: eu-west-1
    # aws_secret_access_key: *************

  ## An absolute or relative path that points towards a SSL key/cert file which is used
  ## jointly with the sslCert option to enable SSL and https connections. If both options
  ## are provided, the server will start using HTTPS automatically.
  # sslCert: null
  # sslKey: null

  ## Allow Universal Plug and Play to automatically request port forwarding for the 
  ## Foundry VTT port to your local network address. Default is true.
  upnp: true

  ## Version of Foundry VTT to install.
  version: 0.8.9

  ## The world startup at system start.
  world: ""

#--------------------------------------------------------------------------------------------
# Extra security and placement strategies that can be configured.
#--------------------------------------------------------------------------------------------
podSecurityContext:
  {}
  # fsGroup: 2000
securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
nodeSelector: {}
tolerations: []
affinity: {}